#!/bin/bash

EXPENSE_HOME=/home/bibek/.expenses

curr_date=`date -I`

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m'

function red {
    printf "${RED}$@${NC}\n"
}
function green {
    printf "${GREEN}$@${NC}\n"
}
function yellow {
    printf "${YELLOW}$@${NC}\n"
}

if [[ $1 == 'add' && $2 == 'date' ]]; then
    curr_date=$3
    # TODO: check date
    if [[ `echo $curr_date | grep -E "[0-9]{4}-[0-9]{2}-[0-9]{2}"` == '' ]]; then
        echo "Wrong date!"
        exit
    fi
    category=$4
    price=$5
    fname=$EXPENSE_HOME/$curr_date
    item="${@:6}"
    echo $price $category $item >> $fname
    echo "Expense added"
elif [[ $1 == 'add' ]]; then
    category=$2
    price=$3
    fname=$EXPENSE_HOME/$curr_date
    item="${@:4}"
    echo $price $category $item >> $fname
    echo "Expense added"
elif [[ $1 == 'show' ]]; then
    total=0
    if [[ $2 == 'all' ]]; then
       for x in $(ls $EXPENSE_HOME); do
	   fpath=$EXPENSE_HOME/$x
	   echo $(yellow $x)
	   cat $fpath
	   sm=$(cat $fpath | cut -d' ' -f 1 | paste -sd+ | bc)
	   total=$(echo $total + $sm | bc)
       done
       echo $(green "TOTAL: $total")
       exit
    elif [[ $2 ]]; then
        curr_date=$2
    fi
	if [[ ! -f $EXPENSE_HOME/$curr_date ]]; then
	    echo "No info for date $curr_date"
	    exit
	fi
	echo $(yellow $curr_date)
	cat $EXPENSE_HOME/$curr_date
	total=$(cat $EXPENSE_HOME/$curr_date | cut -d' ' -f 1 | paste -sd+ | bc)
	echo $(green "TOTAL: $total")
fi
